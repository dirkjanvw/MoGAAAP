# This file contains the full configuration for the pipeline in YAML format.
# Make sure to fill out at least everything that is not labelled as optional.
# All strings that start with "resources" should be relative or absolute paths
# on your machine that are readable by Snakemake.

# All samples should be defined in a TSV file. In this file, a unique
# accessionId, path to HiFi reads, (optional) path to ONT reads, (optional)
# paths to Illumina reads, species name, NCBI taxonomy ID, and reference genome
# ID should be defined.
samples: "config/samples.tsv"

# Whether custom singularity containers can be used. If set to false, not all
# output will be available.
custom_singularity: true

# Assembly settings
assembler: "hifiasm" #supported assemblers: hifiasm, verkko

# Scaffolding settings
scaffolder: "ntjoin" #supported scaffolders: ntjoin, ragtag

# All filtering and scaffolding parameters
min_contig_len: 10000
ntjoin_k: 52 #required for ntjoin
ntjoin_w: 16000 #required for ntjoin

# All reference genomes and chromosomes. The reference genome ID in the samples
# sheet should match the key in this section.
reference_genomes:
    referenceA:
        genome: "resources/reference_genome_A.fa"
        annotation: "resources/reference_genome_A.gff"
        chromosomes:
            1: "Chr1"
            2: "Chr2"
            3: "Chr3"
            4: "Chr4"
            5: "Chr5"
    referenceB:
        genome: "resources/reference_genome_B.fa"
        annotation: "resources/reference_genome_B.gff"
        chromosomes:
            1: "Chr1"
            2: "Chr2"
            3: "Chr3"
            4: "Chr4"
            5: "Chr5"
            6: "Chr6"

# All protein and nucleotide queries that need to be run for the assembly
# analysis module. The key should be the name of the query and the value should
# be the path to the query. At least one protein or nucleotide query is
# required for the module to run (organellar sequences count as nucleotide
# queries).
# Contigs with a more than 50% of its length covered by an organellar sequence
# will be separated from the scaffolded assembly output (not for QC, though).
# For the protein queries, the query should be a single exon domain as it
# is searched in the genome and not in the proteome.
prot_queries:
    NBS_domain: "resources/blast_queries/query1.amac"
nucl_queries:
    ribosome: "resources/blast_queries/ribosome.fasta"
    telomere: "resources/blast_queries/telomere.fasta" #for blastn: should be a 100x repeat of the telomere motif to identify telomeres anywhere in the genome
organellar:
    chloroplast: "resources/blast_queries/chloroplast.fasta"
    mitochondrion: "resources/blast_queries/mitochondrion.fasta"
telomere_motif: "CCCTAAA" #for seqtk: it only identifies the motif at the end of a chromosome

# Annotation settings
helixer_model: "resources/land_plant_v0.3_a_0080.h5"
helixer_max_gene_length: 64152

# Quality assessment settings
k_qa: 21 #optimal k-mer size for quality assessment
gxdb: "resources/gxdb" #path to gxdb for fcs-gx
pantools_grouping: 3 #grouping relaxation setting for pantools
odb: "viridiplantae_odb10" #ODB database for busco
kraken2_nt: "resources/kraken/nt" #kraken2 database
OMAdb: "resources/OMAmerDB.h5" #OMA database for orthologs

# A section to define groups of accessions for plotting together in report. This
# list is order sensitive and will only be used for QC.
set:
    all:
        - accessionA
        - accessionB
        - accessionC

# General settings; only change if you know what you are doing
jvm: "-Xmx100g -Xms100g" #java virtual machine settings
tmpdir: "/dev/shm/" #temporary directory for fast IO
nucmer_maxgap: 1000 #maximum gap size for nucmer
nucmer_minmatch: 1000 #minimum match size for nucmer
